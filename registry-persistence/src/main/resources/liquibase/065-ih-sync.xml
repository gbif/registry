<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

  <changeSet id="65" author="mlopez" runInTransaction="false">
    <sql splitStatements="false" stripComments="false">
      <![CDATA[
        ALTER TYPE enum_identifier_type ADD VALUE 'IH_IRN';
        ALTER TYPE enum_identifier_type RENAME VALUE 'GRBIO_ID' TO 'GRSCICOLL_ID';
        ALTER TYPE enum_identifier_type RENAME VALUE 'GRBIO_URI' TO 'GRSCICOLL_URI';

        ALTER TABLE institution ADD COLUMN email text[];
        ALTER TABLE institution ADD COLUMN phone text[];

        ALTER TABLE collection ADD COLUMN email text[];
        ALTER TABLE collection ADD COLUMN phone text[];
        ALTER TABLE collection ADD COLUMN index_herbariorum_record bool;
        ALTER TABLE collection ADD COLUMN number_specimens int4;

        CREATE TABLE collection_person_identifier (
          collection_person_key uuid NOT NULL REFERENCES collection_person(key) ON DELETE CASCADE,
          identifier_key int4 NOT NULL REFERENCES identifier(key) ON DELETE CASCADE,
          PRIMARY KEY (identifier_key, collection_person_key)
        );

        CREATE TABLE collection_person_tag (
          collection_person_key uuid NOT NULL REFERENCES collection_person(key) ON DELETE CASCADE,
          tag_key int4 NOT NULL REFERENCES tag(key) ON DELETE CASCADE,
          PRIMARY KEY (collection_person_key, tag_key)
        );

        CREATE TABLE collection_person_machine_tag (
          collection_person_key uuid NOT NULL REFERENCES collection_person(key) ON DELETE CASCADE,
          machine_tag_key int4 NOT NULL UNIQUE REFERENCES machine_tag(key) ON DELETE CASCADE,
          PRIMARY KEY (collection_person_key, machine_tag_key)
        );

        CREATE TABLE collection_machine_tag (
          collection_key uuid NOT NULL REFERENCES collection(key) ON DELETE CASCADE,
          machine_tag_key int4 NOT NULL UNIQUE REFERENCES machine_tag(key) ON DELETE CASCADE,
          PRIMARY KEY (collection_key, machine_tag_key)
        );

        CREATE TABLE institution_machine_tag (
          institution_key uuid NOT NULL REFERENCES institution(key) ON DELETE CASCADE,
          machine_tag_key int4 NOT NULL UNIQUE REFERENCES machine_tag(key) ON DELETE CASCADE,
          PRIMARY KEY (institution_key, machine_tag_key)
        );

        CREATE OR REPLACE FUNCTION institution_change_trigger()
        RETURNS TRIGGER AS
        $instchange$
          DECLARE
            addr RECORD;
            mailing_addr RECORD;
          BEGIN
            SELECT * INTO addr FROM address a WHERE a.key = NEW.address_key;
            SELECT * INTO mailing_addr FROM address a WHERE a.key = NEW.mailing_address_key;

            NEW.fulltext_search :=
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.code,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.name,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.description,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(CAST(NEW.type AS TEXT),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.email, ' '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.phone, ' '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.homepage,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.catalog_url,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.api_url,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(CAST(NEW.institutional_governance AS   TEXT),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.discipline, ' '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.additional_names, '   '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.geographic_description,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.taxonomic_description,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.logo_url,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.cites_permit_number,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.address,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.city,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.province,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.postal_code,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.country,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.address,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.city,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.province,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.postal_code,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.country,'')));
            RETURN NEW;
          END;
        $instchange$
        LANGUAGE plpgsql;

      CREATE OR REPLACE FUNCTION collection_change_trigger()
        RETURNS TRIGGER AS
        $colchange$
          DECLARE
            addr RECORD;
            mailing_addr RECORD;
          BEGIN
            SELECT * INTO addr FROM address a WHERE a.key = NEW.address_key;
            SELECT * INTO mailing_addr FROM address a WHERE a.key = NEW.mailing_address_key;

            NEW.fulltext_search :=
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.code,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.name,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.description,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.content_type, ' '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.doi,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.email, ' '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.phone, ' '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.homepage,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.catalog_url,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(NEW.api_url,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(array_to_string(NEW.preservation_type, ' '),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(CAST(NEW.accession_status AS TEXT),''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.address,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.city,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.province,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.postal_code,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(addr.country,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.address,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.city,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.province,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.postal_code,''))) ||
              TO_TSVECTOR('pg_catalog.english', unaccent(COALESCE(mailing_addr.country,'')));
            RETURN NEW;
          END;
        $colchange$
        LANGUAGE plpgsql;
      ]]>
    </sql>
  </changeSet>
</databaseChangeLog>
