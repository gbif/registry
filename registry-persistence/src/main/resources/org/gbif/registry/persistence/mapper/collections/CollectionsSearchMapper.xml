<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.gbif.registry.persistence.mapper.collections.CollectionsSearchMapper">

  <!-- Auto-mapping and eager loading of sub resources  -->
  <resultMap id="SEARCH_DTO_MAP" type="SearchDto" autoMapping="true" />

  <select id="search" resultMap="SEARCH_DTO_MAP">
    SELECT matches.type, matches.key, matches.code, matches.name, matches.institution_key, matches.institution_code, matches.institution_name
    <if test="query != null &amp;&amp; highlight" >
      ,ts_headline(matches.code, query) code_highlight, ts_headline(matches.name, query) name_highlight, ts_headline(matches.description, query) description_highlight
      ,ts_headline(array_to_string(akeys(matches.alternative_codes), ' '), query) alternative_codes_highlight
      ,ts_headline(ad.address, query) address_highlight,ts_headline(ad.city, query) city_highlight,ts_headline(ad.province, query) province_highlight,ts_headline(ad.country, query) country_highlight
      ,ts_headline(mail.address, query) mail_address_highlight,ts_headline(mail.city, query) mail_city_highlight,ts_headline(mail.province, query) mail_province_highlight,ts_headline(mail.country, query) mail_country_highlight
    </if>
    FROM (
      (
        SELECT DISTINCT ON (<if test="query != null">ts_rank_cd(i.fulltext_search, query), </if>i.created, i.key)
          i.key, i.code, i.name, i.description, i.alternative_codes,
          'institution' AS type, <if test="query != null" >ts_rank_cd(i.fulltext_search, query) score, query,</if> i.address_key, i.mailing_address_key,
          null institution_key, null institution_name, null institution_code
        FROM institution i
        <if test="query != null" >
          INNER JOIN to_tsquery('english',regexp_replace(quote_literal(unaccent(trim(#{query}))),'\s+','&amp;','g')) AS query ON query @@ fulltext_search
        </if>
        WHERE i.deleted IS NULL
        ORDER BY <if test="query != null" >ts_rank_cd(i.fulltext_search, query) DESC, </if>i.created DESC, i.key
      )
      UNION ALL
      (
        SELECT DISTINCT ON (<if test="query != null" >ts_rank_cd(c.fulltext_search, query), </if>c.created, c.key)
        c.key, c.code, c.name, c.description, c.alternative_codes,
        'collection' AS type, <if test="query != null" >ts_rank_cd(c.fulltext_search, query) score, query,</if> c.address_key, c.mailing_address_key,
        i.key institution_key, i.name institution_name, i.code institution_code
        FROM collection c
        <if test="query != null" >
          INNER JOIN to_tsquery('english',regexp_replace(quote_literal(unaccent(trim(#{query}))),'\s+','&amp;','g')) AS query ON query @@ fulltext_search
        </if>
        LEFT JOIN institution i ON i.key = c.institution_key
        WHERE c.deleted IS NULL
        ORDER BY <if test="query != null" >ts_rank_cd(c.fulltext_search, query) DESC, </if>c.created DESC, c.key
      )
    ) AS matches
    LEFT JOIN address ad ON ad.key = matches.address_key
    LEFT JOIN address mail ON mail.key = matches.mailing_address_key
    <if test="query != null" >
      ORDER BY matches.score desc
    </if>
    LIMIT 20
  </select>
</mapper>
